@page "/filelist"
@using Microsoft.AspNetCore.Authentication
@inject FileController FileController;
@inject IJSRuntime JS;
@inject ILogger<FileList> _logger;
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>File List</PageTitle>

<h1>Your Files:</h1>

<div>
    <InputFile id="filepicker" class="btn btn-primary" OnChange="@AddFile" />
</div>

<div>
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Size</th>
                <th>Rights</th>
                <th>Delete</th>
                <th>Download</th>
                <th>Share</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var file in Files)
            {
                <tr>
                    <td>@file.Name</td>
                    <td>@file.Size</td>
                    <td>@file.Rights</td>
                    <td><button class="btn btn-primary" hidden="@file.Delete">Delete</button></td>
                    <td><button class="btn btn-primary" hidden="@file.Download">Download</button></td>
                    <td><button class="btn btn-primary" hidden="@file.Share">Share</button></td>
                </tr>
            }
        </tbody>
    </table>

</div>
<script>
    async function uploadFile(filename) {
        let raw_response = await fetch("http://localhost:8080/store", {
            method: "POST",
            mode: "no-cors",
    @* headers: form_headers, *@
            body: filename,
  });
    return raw_response;
    }
</script>
@code {
    private List<SecretFile> Files = new();
    protected override void OnInitialized()
    {
        Files = FileController.GetFiles();
    }
    private async Task AddFile(InputFileChangeEventArgs e)
    {
        _logger.LogDebug($"Trying to do some stuff on client side: {e.FileCount}, filename: {e.File.Name} size {e.File.Size}");
        @* if(e.File.Size < 250000)
        {
            var didItWork = await FileController.SaveFile(e.File.OpenReadStream());
            if(didItWork){
                _logger.LogDebug("Upload Serverside worked");
                return;
            }
            _logger.LogWarning("upload had some trouble");
        } *@
        _logger.LogDebug("Doing clientside upload, it is probably a laarge file");
        var accessToken = HttpContextAccessor.HttpContext?.GetTokenAsync("access_token").Result ?? "";
        var result = await JS.InvokeAsync<string>("uploadFile", e.File.Name);
        _logger.LogDebug($"result: {result}");
    }
}
